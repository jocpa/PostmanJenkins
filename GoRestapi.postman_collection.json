{
	"info": {
		"_postman_id": "ae001890-a7a1-488e-a493-e11e29cd1776",
		"name": "GoRestapi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25854527"
	},
	"item": [
		{
			"name": "Users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "name",
							"value": "Miles",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()\r",
							"\r",
							"console.log(response)\r",
							"\r",
							"pm.collectionVariables.set('userID', response.id)\r",
							"\r",
							"const schema = {\r",
							"    \"name\": \"\",\r",
							"    \"gender\": \"\",\r",
							"    \"email\": \"\",\r",
							"    \"status\": \"\"\r",
							"}\r",
							"const bodyRequest = JSON.parse(pm.request.body.raw)\r",
							"\r",
							"const sameSchema = JSON.stringify( Object.keys( bodyRequest ) ) === JSON.stringify( Object.keys( schema ) )\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('email should match', () => {\r",
							"    pm.expect(response.email).to.be.eql(\"miles@miles.com\")\r",
							"})\r",
							"\r",
							"pm.test(\"Should have same schema\", () => {\r",
							"    pm.expect(true).to.be.eql(sameSchema)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Miles\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"miles@miles.com\",\r\n    \"status\": \"active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const bodyRequest = JSON.parse(pm.request.body.raw) \r",
							"\r",
							"const schema = {\r",
							"    \"name\": \"\",\r",
							"    \"gender\": \"\",\r",
							"    \"email\": \"\",\r",
							"    \"status\": \"\"\r",
							"}\r",
							"\r",
							"const sameSchema = JSON.stringify( Object.keys( bodyRequest ) ) === JSON.stringify( Object.keys( schema ) )\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"should have same Schema\", () => {\r",
							"    pm.expect(sameSchema).to.be.eql(true)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"gwen\",\r\n    \"gender\": \"female\",\r\n    \"email\": \"gwen@gwen.com\",\r\n    \"status\": \"inactive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{userID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{userID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Token",
			"value": "",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "https://gorest.co.in/public/v2"
		},
		{
			"key": "userID",
			"value": "",
			"type": "string"
		}
	]
}